# -*- python -*-
# ex: set filetype=python:

import os
import configparser
from buildbot.plugins import worker
from buildbot.plugins import changes
from buildbot.plugins import schedulers
from buildbot.plugins import steps
from buildbot.plugins import util

BuildmasterConfig = c = {}

####### LOCAL SETTINGS

settings_ini = os.path.expanduser(os.path.join(basedir, 'settings.ini'))
settings = configparser.ConfigParser()
settings.read([settings_ini])

####### FEATURES

c['buildbotNetUsageData'] = None # Disable phone-home feature.

####### WORKERS

c['protocols'] = {'pb': {'port': 9986}}

worker_config = {
    'deb9-amd64': dict(max_builds=1, notify_on_missing='mmeffie@sinenomine.net'),
}

c['workers'] = []
for name,password in settings.items('workers'):
    kwargs = worker_config.get(name, {})
    c['workers'].append(worker.Worker(name, password, **kwargs))

####### CHANGESOURCES

c['change_source'] = []
# TODO: add gerrit change source

####### SCHEDULERS

c['schedulers'] = [
    schedulers.Nightly(
        name='nightly master',
        branch='master',
        builderNames=['nightly'],
        hour=3, minute=0,
    ),
    schedulers.ForceScheduler(
        name='force',
        builderNames=['nightly'],
        properties=[util.WorkerChoiceParameter()],
    ),
]

####### BUILD FACTORIES

factories = {}

factories['generic'] = f = util.BuildFactory()
f.addStep(steps.Git(repourl='git://git.openafs.org/openafs.git', mode='full', method='fresh'))
f.addStep(steps.ShellCommand(command=['/bin/sh', 'regen.sh']))
f.addStep(steps.Configure())
f.addStep(steps.Compile())

####### BUILDERS

c['builders'] = []

def add_builder(name, factory, workers):
    bc = util.BuilderConfig(
        name=name,
        workernames=workers,
        factory=factories[factory],
        canStartBuild=util.enforceChosenWorker,
    )
    c['builders'].append(bc)

add_builder('nightly', 'generic', ['deb9-amd64', 'test8'])

####### BUILDBOT SERVICES

c['services'] = []

####### WEB UI

c['title'] = 'OpenAFS Buildbot'
c['titleURL'] = 'https://www.openafs.org/'
c['buildbotURL'] = settings.get('local', 'buildbotURL', fallback='http://buildbot.openafs.org:8011/')

auth = util.UserPasswordAuth(settings.items('admins'))
authz = util.Authz(
    allowRules=[
        util.AnyControlEndpointMatcher(role='admins'),
    ],
    roleMatchers=[
        util.RolesFromEmails(admins=settings.options('admins'))
    ],
)

c['www'] = {
    'port': 8011,
    'auth': auth,
    'authz': authz,
    'plugins': {
        'waterfall_view': {},
        'console_view': {},
        'grid_view': {},
    },
}

####### DB URL

c['db'] = {'db_url' : 'sqlite:///state.sqlite'}
